--테이블 쿼리문 작성구역--
--다들 이쁘게 쿼리문을 작성해 주세요--
--의존 관계 잘 생각해서 테이블 생성 순서 지켜주세요!--
--주석으로 설명도 잘 해주세요! --

--쪽지함에 저장될 쪽지 시퀀스 중복을 피하기 위한 100번스타트 --
create sequence note_seq
start with 100

--메신저 저장을 위한 메신저 시퀀스--
create sequence msg_seq
start with 100


--member
create table member(
	m_id number primary key,
	m_name varchar2(20) not null
	m_email varchar2(50) not null unique,
	m_pwd varchar2(100) not null,
	m_phone varchar2(20) not null,
	m_question number not null,
	m_answer varchar2(100) not null,
	m_recentMember varchar2(1000),
    m_image varchar2(1000)
);
--note
create table note(
	n_id number primary key,
	n_title varchar2(100) not null,
	n_content varchar2(500) not null,
	n_sender number,
	n_receive number,
	n_date date,
CONSTRAINT fk_note_recevie FOREIGN KEY (n_receive) REFERENCES member(m_id),
CONSTRAINT fk_note_sender FOREIGN KEY (n_sender) REFERENCES member(m_id)
);

--inbox 대신 folder 컬럼을 추가해서 기본 0번 폴더로 설정함 
--folder컬럼의 값: ex)1,2,3,4번 폴더 별로 정렬하면 Good! 
ALTER TABLE note ADD(folder NUMBER DEFAULT 0);


--note inbox
create table inbox(
	i_id number primary key,
	i_forder varchar2(50) not null,
	i_member number,
	i_note number,
	CONSTRAINT fk_inbox_member FOREIGN KEY (i_member) REFERENCES member(m_id),
	CONSTRAINT fk_inbox_note FOREIGN KEY (i_note) REFERENCES note(n_id)
);
--project
create table project(
	p_id number primary key,
	p_name varchar2(200),
	p_start date,
	p_end date,
	p_pmid number,
	p_crew varchar2(200),
	p_memo varchar2(1000),
	CONSTRAINT fk_project_member FOREIGN KEY (p_pmid) REFERENCES member(m_id)
);
--messenger
create table msg(
	msg_id number primary key,
	msg_content varchar2(3000) not null,
	msg_sender number,
	msg_projectid number,
	msg_date date,
	CONSTRAINT fk_msg_member FOREIGN KEY (msg_sender) REFERENCES member(m_id),
	CONSTRAINT fk_msg_note FOREIGN KEY (msg_projectid) REFERENCES project(p_id)
);
--work schedule
CREATE TABLE checkList(
	check_id number primary key,
	check_name varchar2(400),
	check_projectId number,
	check_start date,
	check_end date,
	check_manager number,
	check_sign number,
	check_type number,
	check_content varchar2(4000),
	CONSTRAINT fk_schedule_member FOREIGN KEY (check_manager) REFERENCES member(m_id),
	CONSTRAINT fk_schedule_project FOREIGN KEY (check_projectid) REFERENCES project(p_id)
);
--data archive
CREATE TABLE datalist(
	data_id number primary key,
	data_projectId number,
	CONSTRAINT fk_datalist_projectId FOREIGN KEY (data_projectID) REFERENCES project(p_id)
);

--data detail
CREATE TABLE datadetail(
	dDetail_id number primary key,
	dDetail_dListId number,
	dDetail_title varchar2(300),
	dDetail_contents varchar2(3000),
	dDetail_date date,
	dDetail_writer number,
	dDetail_fName varchar2(100),
	dDetail_hit number,
	CONSTRAINT fk_datadetail_datalist_id FOREIGN KEY (dDetail_dListID) REFERENCES datalist(data_id),
	CONSTRAINT fk_datadetail_writer FOREIGN KEY (dDetail_writer) REFERENCES member(m_id)
);
--reply
CREATE TABLE reply(
	r_id number primary key,
	r_dDetailId number,
	r_writer number,
	r_content varchar2(1000),
	r_date date,
	CONSTRAINT fk_reply_datadetail_id FOREIGN KEY (r_dDetailID) REFERENCES datadetail(dDetail_id),
	CONSTRAINT fk_reply_writer FOREIGN KEY (r_writer) REFERENCES member(m_id)
);

--이미지 게시판
create table img_board(
	img_bno number primary key,
	img_title varchar2(200),
	img_content varchar2(4000),
	img_writer varchar2(50),
	img_regdate timestamp,
	img_viewcnt number,
	img_replycnt number default 0	
);

--이미지 게시판 댓글
create table img_reply (
 img_rno number,
 img_bno number not null,
 img_replytext varchar2(2000) not null,
 img_replyer varchar2(50) not null,
 img_regdate date default sysdate,
 img_updatedate date default sysdate);
 
 --이미지 게시판 PK
 alter table img_reply add constraint pk_imgreply
 primary key (img_rno);

--이미지 게시판 파일
create table img_attach(
   img_fullName varchar(1000) not null,
   img_bno NUMBER not null,
   img_regdate timestamp,
   primary key(img_fullName)
);

--이미지 게시판 img_bno 와 댓글 img_bno FK 제약조건
 alter table img_reply add constraint fk_board_imgreply
 foreign key (img_bno) references img_board(img_bno) on delete cascade;
 
--이미지 게시판 img_bno 와 파일 img_bno FK 제약조건
alter table img_attach add constraint fk_imgboard_attach
foreign key (img_bno) references img_board(img_bno) on delete cascade;

--이미지 게시판과 댓글 시퀀스
CREATE SEQUENCE imgboard_seq;
CREATE SEQUENCE imgreply_seq;


--에센스 게시판
create table essence(
   e_id NUMBER primary key,
   e_projectid NUMBER,
   e_json varchar2(4000)
)
